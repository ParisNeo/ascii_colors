# .github/workflows/deploy-docs.yml
name: Deploy Documentation to GitHub Pages

on:
  push:
    branches: [ "main" ] # Trigger on push to main branch
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Choose a Python version consistent with your project

      - name: Install dependencies (including docs extras)
        run: |
          python -m pip install --upgrade pip wheel setuptools
          # Install the project AND its 'dev' optional dependencies
          # This installs Sphinx, furo, etc. defined in pyproject.toml [project.optional-dependencies.dev]
          pip install .[dev]

      - name: Build Sphinx documentation
        run: |
          sphinx-build -b html docs/source docs/build/html
          # Alternatively, use the Makefile if preferred and configured:
          # make -C docs html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire directory
          path: 'docs/build/html'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4